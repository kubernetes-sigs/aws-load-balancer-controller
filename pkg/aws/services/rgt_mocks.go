// Code generated by MockGen. DO NOT EDIT.
// Source: sigs.k8s.io/aws-load-balancer-controller/pkg/aws/services (interfaces: RGT)

// Package services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	resourcegroupstaggingapi "github.com/aws/aws-sdk-go-v2/service/resourcegroupstaggingapi"
	types "github.com/aws/aws-sdk-go-v2/service/resourcegroupstaggingapi/types"
	gomock "github.com/golang/mock/gomock"
)

// MockRGT is a mock of RGT interface.
type MockRGT struct {
	ctrl     *gomock.Controller
	recorder *MockRGTMockRecorder
}

// MockRGTMockRecorder is the mock recorder for MockRGT.
type MockRGTMockRecorder struct {
	mock *MockRGT
}

// NewMockRGT creates a new mock instance.
func NewMockRGT(ctrl *gomock.Controller) *MockRGT {
	mock := &MockRGT{ctrl: ctrl}
	mock.recorder = &MockRGTMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRGT) EXPECT() *MockRGTMockRecorder {
	return m.recorder
}

// GetResourcesAsList mocks base method.
func (m *MockRGT) GetResourcesAsList(arg0 context.Context, arg1 *resourcegroupstaggingapi.GetResourcesInput) ([]types.ResourceTagMapping, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourcesAsList", arg0, arg1)
	ret0, _ := ret[0].([]types.ResourceTagMapping)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourcesAsList indicates an expected call of GetResourcesAsList.
func (mr *MockRGTMockRecorder) GetResourcesAsList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourcesAsList", reflect.TypeOf((*MockRGT)(nil).GetResourcesAsList), arg0, arg1)
}
