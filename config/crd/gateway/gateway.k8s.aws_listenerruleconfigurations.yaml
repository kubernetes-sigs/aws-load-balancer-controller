---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: listenerruleconfigurations.gateway.k8s.aws
spec:
  group: gateway.k8s.aws
  names:
    kind: ListenerRuleConfiguration
    listKind: ListenerRuleConfigurationList
    plural: listenerruleconfigurations
    singular: listenerruleconfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ListenerRuleConfiguration is the Schema for the ListenerRuleConfiguration
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ListenerRuleSpec defines the desired state of ListenerRuleConfiguration
            properties:
              actions:
                description: |-
                  Actions defines the set of actions to be performed when conditions match.
                  This CRD implementation currently supports only  authenticate-oidc, authenticate-cognito, and fixed-response action types fully and forward and redirect actions partially


                  For other fields in forward and redirect actions, please use the standard Gateway API HTTPRoute or other route resources, which provide
                  native support for those conditions through the Gateway API specification.


                  At most one authentication action can be specified (either authenticate-oidc or authenticate-cognito).
                items:
                  description: Action defines an action for a listener rule
                  properties:
                    authenticateCognitoConfig:
                      description: Information for an authenticate-cognito action
                      properties:
                        authenticationRequestExtraParams:
                          additionalProperties:
                            type: string
                          description: |-
                            The query parameters (up to 10) to include in the redirect request to the
                            authorization endpoint.
                          maxProperties: 10
                          type: object
                        onUnauthenticatedRequest:
                          default: authenticate
                          description: The behavior if the user is not authenticated.
                            The following are possible
                          enum:
                          - deny
                          - allow
                          - authenticate
                          type: string
                        scope:
                          default: openid
                          description: |-
                            The set of user claims to be requested from the IdP. The default is openid .


                            To verify which scope values your IdP supports and how to separate multiple
                            values, see the documentation for your IdP.
                          type: string
                        sessionCookieName:
                          default: AWSELBAuthSessionCookie
                          description: |-
                            The name of the cookie used to maintain session information. The default is
                            AWSELBAuthSessionCookie.
                          type: string
                        sessionTimeout:
                          default: 604800
                          description: |-
                            The maximum duration of the authentication session, in seconds. The default is
                            604800 seconds (7 days).
                          format: int32
                          maximum: 604800
                          minimum: 1
                          type: integer
                        userPoolArn:
                          description: The Amazon Resource Name (ARN) of the Amazon
                            Cognito user pool.
                          type: string
                        userPoolClientId:
                          description: The ID of the Amazon Cognito user pool client.
                          type: string
                        userPoolDomain:
                          description: |-
                            The domain prefix or fully-qualified domain name of the Amazon Cognito user
                            pool.
                          type: string
                      required:
                      - userPoolArn
                      - userPoolClientId
                      - userPoolDomain
                      type: object
                    authenticateOIDCConfig:
                      description: Information for an authenticate-oidc action
                      properties:
                        authenticationRequestExtraParams:
                          additionalProperties:
                            type: string
                          description: |-
                            The query parameters (up to 10) to include in the redirect request to the
                            authorization endpoint.
                          maxProperties: 10
                          type: object
                        authorizationEndpoint:
                          description: |-
                            The authorization endpoint of the IdP. This must be a full URL, including the
                            HTTPS protocol, the domain, and the path.
                          type: string
                        issuer:
                          description: |-
                            The OIDC issuer identifier of the IdP. This must be a full URL, including the
                            HTTPS protocol, the domain, and the path.
                          type: string
                        onUnauthenticatedRequest:
                          default: authenticate
                          description: The behavior if the user is not authenticated.
                            The following are possible
                          enum:
                          - deny
                          - allow
                          - authenticate
                          type: string
                        scope:
                          default: openid
                          description: |-
                            The set of user claims to be requested from the IdP. The default is openid .


                            To verify which scope values your IdP supports and how to separate multiple
                            values, see the documentation for your IdP.
                          type: string
                        secret:
                          description: Secret holds OAuth 2.0 clientID and clientSecret.
                            You need to create this secret and provide its name and
                            namespace
                          properties:
                            name:
                              description: Name is name of the secret
                              type: string
                            namespace:
                              description: Namespace is namespace of secret. If empty
                                it will be considered to be in same namespace as of
                                the resource referring it
                              type: string
                          required:
                          - name
                          type: object
                        sessionCookieName:
                          default: AWSELBAuthSessionCookie
                          description: |-
                            The name of the cookie used to maintain session information. The default is
                            AWSELBAuthSessionCookie.
                          type: string
                        sessionTimeout:
                          default: 604800
                          description: |-
                            The maximum duration of the authentication session, in seconds. The default is
                            604800 seconds (7 days).
                          format: int32
                          maximum: 604800
                          minimum: 1
                          type: integer
                        tokenEndpoint:
                          description: |-
                            The token endpoint of the IdP. This must be a full URL, including the HTTPS
                            protocol, the domain, and the path.
                          type: string
                        useExistingClientSecret:
                          description: |-
                            Indicates whether to use the existing client secret when modifying a listener rule. If
                            you are creating a listener rule, you can omit this parameter or set it to false.
                          type: boolean
                        userInfoEndpoint:
                          description: |-
                            The user info endpoint of the IdP. This must be a full URL, including the HTTPS
                            protocol, the domain, and the path.
                          type: string
                      required:
                      - authorizationEndpoint
                      - issuer
                      - secret
                      - tokenEndpoint
                      - userInfoEndpoint
                      type: object
                    fixedResponseConfig:
                      description: Information for a fixed-response action
                      properties:
                        contentType:
                          default: text/plain
                          description: The content type of the fixed response.
                          enum:
                          - text/plain
                          - text/css
                          - text/html
                          - application/javascript
                          - application/json
                          type: string
                        messageBody:
                          description: The message
                          type: string
                        statusCode:
                          description: The HTTP response code (2XX, 4XX, or 5XX).
                          format: int32
                          type: integer
                          x-kubernetes-validations:
                          - message: StatusCode must be a valid HTTP status code in
                              the 2XX, 4XX, or 5XX range
                            rule: (self >= 200 && self <= 299) || (self >= 400 &&
                              self <= 599)
                      required:
                      - statusCode
                      type: object
                    forwardConfig:
                      description: Information for a forward action
                      properties:
                        targetGroupStickinessConfig:
                          description: |-
                            The target group stickiness for the rule.
                            Note: ForwardActionConfig only supports target group stickiness configuration through CRD.
                            All other forward action fields must be set through the Gateway API native way.
                          properties:
                            durationSeconds:
                              default: 3600
                              description: |-
                                The time period, in seconds, during which requests from a client should be
                                routed to the same target group. The range is 1-604800 seconds (7 days).
                              format: int32
                              maximum: 604800
                              minimum: 1
                              type: integer
                            enabled:
                              default: false
                              description: Indicates whether target group stickiness
                                is enabled.
                              type: boolean
                          type: object
                      type: object
                    redirectConfig:
                      description: Information for a redirect action
                      properties:
                        query:
                          default: '#{query}'
                          description: |-
                            The query parameters, URL-encoded when necessary, but not percent-encoded. Do
                            not include the leading "?", as it is automatically added. You can specify any
                            of the reserved keywords.
                            Note: RedirectActionConfig only supports setting the query parameter through CRD.
                            All other redirect action fields must be set through the Gateway API native way.
                          type: string
                      type: object
                    type:
                      description: The type of action
                      enum:
                      - forward
                      - fixed-response
                      - redirect
                      - authenticate-cognito
                      - authenticate-oidc
                      type: string
                  required:
                  - type
                  type: object
                  x-kubernetes-validations:
                  - message: forwardConfig must be specified only when type is 'forward'
                    rule: 'has(self.type) && self.type == ''forward'' ? has(self.forwardConfig)
                      : !has(self.forwardConfig)'
                  - message: redirectConfig must be specified only when type is 'redirect'
                    rule: 'has(self.type) && self.type == ''redirect'' ? has(self.redirectConfig)
                      : !has(self.redirectConfig)'
                  - message: fixedResponseConfig must be specified only when type
                      is 'fixed-response'
                    rule: 'has(self.type) && self.type == ''fixed-response'' ? has(self.fixedResponseConfig)
                      : !has(self.fixedResponseConfig)'
                  - message: authenticateCognitoConfig must be specified only when
                      type is 'authenticate-cognito'
                    rule: 'has(self.type) && self.type == ''authenticate-cognito''
                      ? has(self.authenticateCognitoConfig) : !has(self.authenticateCognitoConfig)'
                  - message: authenticateOIDCConfig must be specified only when type
                      is 'authenticate-oidc'
                    rule: 'has(self.type) && self.type == ''authenticate-oidc'' ?
                      has(self.authenticateOIDCConfig) : !has(self.authenticateOIDCConfig)'
                maxItems: 2
                minItems: 1
                type: array
              conditions:
                description: |-
                  Conditions defines the circumstances under which the rule actions will be performed.
                  This CRD implementation currently supports only the source-ip condition type


                  For other condition types (such as path-pattern, host-header, http-header, etc.),
                  please use the standard Gateway API HTTPRoute or other route resources, which provide
                  native support for those conditions through the Gateway API specification.
                items:
                  description: Information about a condition for a listener rule
                  properties:
                    field:
                      description: The field in the HTTP request
                      enum:
                      - source-ip
                      type: string
                    sourceIPConfig:
                      description: Information for a source IP condition
                      properties:
                        values:
                          description: One or more source IP addresses, in CIDR format
                          items:
                            type: string
                          minItems: 1
                          type: array
                      required:
                      - values
                      type: object
                  required:
                  - field
                  type: object
                  x-kubernetes-validations:
                  - message: sourceIPConfig must be specified only when field is 'source-ip'
                    rule: 'has(self.field) && self.field == ''source-ip'' ? has(self.sourceIPConfig)
                      : !has(self.sourceIPConfig)'
                minItems: 1
                type: array
              tags:
                additionalProperties:
                  type: string
                description: Tags are the AWS resource tags to be applied to all AWS
                  resources created for this rule.
                type: object
            type: object
            x-kubernetes-validations:
            - message: At least one action must be specified if actions field is present
              rule: '!has(self.actions) || size(self.actions) > 0'
            - message: Only forward, redirect, authenticate-oidc, authenticate-cognito,
                and fixed-response action types are supported
              rule: '!has(self.actions) || self.actions.all(a, a.type == ''authenticate-oidc''
                || a.type == ''authenticate-cognito'' || a.type == ''fixed-response''
                || a.type == ''forward'' || a.type == ''redirect'')'
            - message: At most one authentication action (either authenticate-oidc
                or authenticate-cognito) can be specified
              rule: '!has(self.actions) || size(self.actions.filter(a, a.type == ''authenticate-oidc''
                || a.type == ''authenticate-cognito'')) <= 1'
          status:
            description: ListenerRuleStatus defines the observed state of ListenerRuleConfiguration
            properties:
              observedGeneration:
                description: The observed generation of the rule configuration
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
